name: Quality Checks

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev eslint prettier

      - name: Create ESLint config
        run: |
          cat > .eslintrc.json << EOF
          {
            "env": {
              "es2021": true,
              "node": true
            },
            "extends": ["eslint:recommended"],
            "parserOptions": {
              "ecmaVersion": "latest",
              "sourceType": "module"
            },
            "rules": {
              "indent": ["error", 2],
              "linebreak-style": ["error", "unix"],
              "quotes": ["error", "single"],
              "semi": ["error", "always"]
            }
          }
          EOF

      - name: Lint JavaScript files
        run: npx eslint test/*.js --format=compact

      - name: Check file structure
        run: |
          echo "📁 Verificando estrutura do projeto..."
          echo "✅ README.md existe: $([ -f README.md ] && echo 'SIM' || echo 'NÃO')"
          echo "✅ Diretório test/ existe: $([ -d test/ ] && echo 'SIM' || echo 'NÃO')"
          echo "✅ login.interation.test.js existe: $([ -f test/login.interation.test.js ] && echo 'SIM' || echo 'NÃO')"
          echo "✅ login.virtual.users.test.js existe: $([ -f test/login.virtual.users.test.js ] && echo 'SIM' || echo 'NÃO')"

      - name: Validate test files syntax
        run: |
          echo "🔍 Validando sintaxe dos arquivos de teste..."
          node -c test/login.interation.test.js && echo "✅ login.interation.test.js - OK"
          node -c test/login.virtual.users.test.js && echo "✅ login.virtual.users.test.js - OK"
